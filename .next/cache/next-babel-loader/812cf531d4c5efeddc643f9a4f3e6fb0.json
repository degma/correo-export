{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Filters, ResourceItem, ResourceList, TextField, TextStyle } from '@shopify/polaris';\nexport default function ResourceListExample() {\n  _s();\n\n  var _useState = useState([]),\n      selectedItems = _useState[0],\n      setSelectedItems = _useState[1];\n\n  var _useState2 = useState('DATE_MODIFIED_DESC'),\n      sortValue = _useState2[0],\n      setSortValue = _useState2[1];\n\n  var _useState3 = useState('VIP'),\n      taggedWith = _useState3[0],\n      setTaggedWith = _useState3[1];\n\n  var _useState4 = useState(null),\n      queryValue = _useState4[0],\n      setQueryValue = _useState4[1];\n\n  var handleTaggedWithChange = useCallback(function (value) {\n    return setTaggedWith(value);\n  }, []);\n  var handleQueryValueChange = useCallback(function (value) {\n    return setQueryValue(value);\n  }, []);\n  var handleTaggedWithRemove = useCallback(function () {\n    return setTaggedWith(null);\n  }, []);\n  var handleQueryValueRemove = useCallback(function () {\n    return setQueryValue(null);\n  }, []);\n  var handleClearAll = useCallback(function () {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n  var resourceName = {\n    singular: 'customer',\n    plural: 'customers'\n  };\n  var items = [{\n    id: 341,\n    url: 'customers/341',\n    name: 'Mae Jemison',\n    location: 'Decatur, USA',\n    latestOrderUrl: 'orders/1456'\n  }, {\n    id: 256,\n    url: 'customers/256',\n    name: 'Ellen Ochoa',\n    location: 'Los Angeles, USA',\n    latestOrderUrl: 'orders/1457'\n  }];\n  var promotedBulkActions = [{\n    content: 'Edit customers',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk edit');\n    }\n  }];\n  var bulkActions = [{\n    content: 'Add tags',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk add tags');\n    }\n  }, {\n    content: 'Remove tags',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk remove tags');\n    }\n  }, {\n    content: 'Delete customers',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk delete');\n    }\n  }];\n  var filters = [{\n    key: 'taggedWith',\n    label: 'Tagged with',\n    filter: __jsx(TextField, {\n      label: \"Tagged with\",\n      value: taggedWith,\n      onChange: handleTaggedWithChange,\n      labelHidden: true\n    }),\n    shortcut: true\n  }];\n  var appliedFilters = !isEmpty(taggedWith) ? [{\n    key: 'taggedWith',\n    label: disambiguateLabel('taggedWith', taggedWith),\n    onRemove: handleTaggedWithRemove\n  }] : [];\n\n  var filterControl = __jsx(Filters, {\n    queryValue: queryValue,\n    filters: filters,\n    appliedFilters: appliedFilters,\n    onQueryChange: handleQueryValueChange,\n    onQueryClear: handleQueryValueRemove,\n    onClearAll: handleClearAll\n  }, __jsx(\"div\", {\n    style: {\n      paddingLeft: '8px'\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return console.log('New filter saved');\n    }\n  }, \"Save\")));\n\n  return __jsx(Card, null, __jsx(ResourceList, {\n    resourceName: resourceName,\n    items: items,\n    renderItem: renderItem,\n    selectedItems: selectedItems,\n    onSelectionChange: setSelectedItems,\n    promotedBulkActions: promotedBulkActions,\n    bulkActions: bulkActions,\n    sortValue: sortValue,\n    sortOptions: [{\n      label: 'Newest update',\n      value: 'DATE_MODIFIED_DESC'\n    }, {\n      label: 'Oldest update',\n      value: 'DATE_MODIFIED_ASC'\n    }],\n    onSortChange: function onSortChange(selected) {\n      setSortValue(selected);\n      console.log(\"Sort option changed to \".concat(selected, \".\"));\n    },\n    filterControl: filterControl\n  }));\n\n  function renderItem(item) {\n    var id = item.id,\n        url = item.url,\n        name = item.name,\n        location = item.location,\n        latestOrderUrl = item.latestOrderUrl;\n\n    var media = __jsx(TextStyle, {\n      variation: \"strong\"\n    }, \"#1212\");\n\n    var shortcutActions = latestOrderUrl ? [{\n      content: 'View latest order',\n      url: latestOrderUrl\n    }] : null;\n    return __jsx(ResourceItem, {\n      id: id,\n      url: url,\n      media: media,\n      accessibilityLabel: \"View details for \".concat(name),\n      shortcutActions: shortcutActions,\n      persistActions: true\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, name)), __jsx(\"div\", null, location));\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case 'taggedWith':\n        return \"Tagged with \".concat(value);\n\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n\n_s(ResourceListExample, \"64vKmWFmisM8yBjplNACi+CGAGY=\");\n\n_c = ResourceListExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResourceListExample\");","map":{"version":3,"sources":["/Users/martindegraf/Documents/proyectos/ca-export/components/order-list.component.js"],"names":["React","useCallback","useState","Avatar","Button","Card","Filters","ResourceItem","ResourceList","TextField","TextStyle","ResourceListExample","selectedItems","setSelectedItems","sortValue","setSortValue","taggedWith","setTaggedWith","queryValue","setQueryValue","handleTaggedWithChange","value","handleQueryValueChange","handleTaggedWithRemove","handleQueryValueRemove","handleClearAll","resourceName","singular","plural","items","id","url","name","location","latestOrderUrl","promotedBulkActions","content","onAction","console","log","bulkActions","filters","key","label","filter","shortcut","appliedFilters","isEmpty","disambiguateLabel","onRemove","filterControl","paddingLeft","renderItem","selected","item","media","shortcutActions","Array","isArray","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Filters, ResourceItem, ResourceList, TextField, TextStyle } from '@shopify/polaris';\n\n\nexport default function ResourceListExample() {\n    const [selectedItems, setSelectedItems] = useState([]);\n    const [sortValue, setSortValue] = useState('DATE_MODIFIED_DESC');\n    const [taggedWith, setTaggedWith] = useState('VIP');\n    const [queryValue, setQueryValue] = useState(null);\n\n    const handleTaggedWithChange = useCallback(\n        (value) => setTaggedWith(value),\n        [],\n    );\n    const handleQueryValueChange = useCallback(\n        (value) => setQueryValue(value),\n        [],\n    );\n    const handleTaggedWithRemove = useCallback(() => setTaggedWith(null), []);\n    const handleQueryValueRemove = useCallback(() => setQueryValue(null), []);\n    const handleClearAll = useCallback(() => {\n        handleTaggedWithRemove();\n        handleQueryValueRemove();\n    }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n    const resourceName = {\n        singular: 'customer',\n        plural: 'customers',\n    };\n\n    const items = [\n        {\n            id: 341,\n            url: 'customers/341',\n            name: 'Mae Jemison',\n            location: 'Decatur, USA',\n            latestOrderUrl: 'orders/1456',\n        },\n        {\n            id: 256,\n            url: 'customers/256',\n            name: 'Ellen Ochoa',\n            location: 'Los Angeles, USA',\n            latestOrderUrl: 'orders/1457',\n        },\n    ];\n\n    const promotedBulkActions = [\n        {\n            content: 'Edit customers',\n            onAction: () => console.log('Todo: implement bulk edit'),\n        },\n    ];\n\n    const bulkActions = [\n        {\n            content: 'Add tags',\n            onAction: () => console.log('Todo: implement bulk add tags'),\n        },\n        {\n            content: 'Remove tags',\n            onAction: () => console.log('Todo: implement bulk remove tags'),\n        },\n        {\n            content: 'Delete customers',\n            onAction: () => console.log('Todo: implement bulk delete'),\n        },\n    ];\n\n    const filters = [\n        {\n            key: 'taggedWith',\n            label: 'Tagged with',\n            filter: (\n                <TextField\n                    label=\"Tagged with\"\n                    value={taggedWith}\n                    onChange={handleTaggedWithChange}\n                    labelHidden\n                />\n            ),\n            shortcut: true,\n        },\n    ];\n\n    const appliedFilters = !isEmpty(taggedWith)\n        ? [\n            {\n                key: 'taggedWith',\n                label: disambiguateLabel('taggedWith', taggedWith),\n                onRemove: handleTaggedWithRemove,\n            },\n        ]\n        : [];\n\n    const filterControl = (\n        <Filters\n            queryValue={queryValue}\n            filters={filters}\n            appliedFilters={appliedFilters}\n            onQueryChange={handleQueryValueChange}\n            onQueryClear={handleQueryValueRemove}\n            onClearAll={handleClearAll}\n        >\n            <div style={{ paddingLeft: '8px' }}>\n                <Button onClick={() => console.log('New filter saved')}>Save</Button>\n            </div>\n        </Filters>\n    );\n\n    return (\n\n        \n        <Card>\n\n            <ResourceList\n                resourceName={resourceName}\n                items={items}\n                renderItem={renderItem}\n                selectedItems={selectedItems}\n                onSelectionChange={setSelectedItems}\n                promotedBulkActions={promotedBulkActions}\n                bulkActions={bulkActions}\n                sortValue={sortValue}\n                sortOptions={[\n                    { label: 'Newest update', value: 'DATE_MODIFIED_DESC' },\n                    { label: 'Oldest update', value: 'DATE_MODIFIED_ASC' },\n                ]}\n                onSortChange={(selected) => {\n                    setSortValue(selected);\n                    console.log(`Sort option changed to ${selected}.`);\n                }}\n                filterControl={filterControl}\n                />\n        </Card>\n    );\n\n    function renderItem(item) {\n        const { id, url, name, location, latestOrderUrl } = item;\n        const media =\n            <TextStyle variation=\"strong\">#1212</TextStyle>;\n        const shortcutActions = latestOrderUrl\n            ? [{ content: 'View latest order', url: latestOrderUrl }]\n            : null;\n        return (\n            <ResourceItem\n                id={id}\n                url={url}\n                media={media}\n                accessibilityLabel={`View details for ${name}`}\n                shortcutActions={shortcutActions}\n                persistActions\n            >\n                <h3>\n                    <TextStyle variation=\"strong\">{name}</TextStyle>\n                </h3>\n                <div>{location}</div>\n            </ResourceItem>\n        );\n    }\n\n    function disambiguateLabel(key, value) {\n        switch (key) {\n            case 'taggedWith':\n                return `Tagged with ${value}`;\n            default:\n                return value;\n        }\n    }\n\n    function isEmpty(value) {\n        if (Array.isArray(value)) {\n            return value.length === 0;\n        } else {\n            return value === '' || value == null;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}