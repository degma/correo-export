{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Avatar, Button, Card, Filters, ResourceItem, ResourceList, TextField, TextStyle } from '@shopify/polaris';\nexport default function ResourceListExample() {\n  _s();\n\n  var _useState = useState([]),\n      selectedItems = _useState[0],\n      setSelectedItems = _useState[1];\n\n  var _useState2 = useState('DATE_MODIFIED_DESC'),\n      sortValue = _useState2[0],\n      setSortValue = _useState2[1];\n\n  var _useState3 = useState('VIP'),\n      taggedWith = _useState3[0],\n      setTaggedWith = _useState3[1];\n\n  var _useState4 = useState(null),\n      queryValue = _useState4[0],\n      setQueryValue = _useState4[1];\n\n  var handleTaggedWithChange = useCallback(function (value) {\n    return setTaggedWith(value);\n  }, []);\n  var handleQueryValueChange = useCallback(function (value) {\n    return setQueryValue(value);\n  }, []);\n  var handleTaggedWithRemove = useCallback(function () {\n    return setTaggedWith(null);\n  }, []);\n  var handleQueryValueRemove = useCallback(function () {\n    return setQueryValue(null);\n  }, []);\n  var handleClearAll = useCallback(function () {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n  var resourceName = {\n    singular: 'customer',\n    plural: 'customers'\n  };\n  var items = [{\n    id: 341,\n    url: 'customers/341',\n    name: 'Mae Jemison',\n    location: 'Decatur, USA',\n    latestOrderUrl: 'orders/1456'\n  }, {\n    id: 256,\n    url: 'customers/256',\n    name: 'Ellen Ochoa',\n    location: 'Los Angeles, USA',\n    latestOrderUrl: 'orders/1457'\n  }];\n  var promotedBulkActions = [{\n    content: 'Edit customers',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk edit');\n    }\n  }];\n  var bulkActions = [{\n    content: 'Add tags',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk add tags');\n    }\n  }, {\n    content: 'Remove tags',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk remove tags');\n    }\n  }, {\n    content: 'Delete customers',\n    onAction: function onAction() {\n      return console.log('Todo: implement bulk delete');\n    }\n  }];\n  var filters = [{\n    key: 'taggedWith',\n    label: 'Tagged with',\n    filter: __jsx(TextField, {\n      label: \"Tagged with\",\n      value: taggedWith,\n      onChange: handleTaggedWithChange,\n      labelHidden: true\n    }),\n    shortcut: true\n  }];\n  var appliedFilters = !isEmpty(taggedWith) ? [{\n    key: 'taggedWith',\n    label: disambiguateLabel('taggedWith', taggedWith),\n    onRemove: handleTaggedWithRemove\n  }] : [];\n\n  var filterControl = __jsx(Filters, {\n    queryValue: queryValue,\n    filters: filters,\n    appliedFilters: appliedFilters,\n    onQueryChange: handleQueryValueChange,\n    onQueryClear: handleQueryValueRemove,\n    onClearAll: handleClearAll\n  }, __jsx(\"div\", {\n    style: {\n      paddingLeft: '8px'\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return console.log('New filter saved');\n    }\n  }, \"Save\")));\n\n  return __jsx(Card, null, __jsx(ResourceList, {\n    resourceName: resourceName,\n    items: items,\n    renderItem: renderItem,\n    selectedItems: selectedItems,\n    onSelectionChange: setSelectedItems,\n    promotedBulkActions: promotedBulkActions,\n    bulkActions: bulkActions,\n    sortValue: sortValue,\n    sortOptions: [{\n      label: 'Newest update',\n      value: 'DATE_MODIFIED_DESC'\n    }, {\n      label: 'Oldest update',\n      value: 'DATE_MODIFIED_ASC'\n    }],\n    onSortChange: function onSortChange(selected) {\n      setSortValue(selected);\n      console.log(\"Sort option changed to \".concat(selected, \".\"));\n    },\n    filterControl: filterControl\n  }));\n\n  function renderItem(item) {\n    var id = item.id,\n        url = item.url,\n        name = item.name,\n        location = item.location,\n        latestOrderUrl = item.latestOrderUrl;\n\n    var media = __jsx(Avatar, {\n      customer: true,\n      size: \"medium\",\n      name: name\n    });\n\n    var shortcutActions = latestOrderUrl ? [{\n      content: 'View latest order',\n      url: latestOrderUrl\n    }] : null;\n    return __jsx(ResourceItem, {\n      id: id,\n      url: url,\n      media: media,\n      accessibilityLabel: \"View details for \".concat(name),\n      shortcutActions: shortcutActions,\n      persistActions: true\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, name)), __jsx(\"div\", null, location));\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case 'taggedWith':\n        return \"Tagged with \".concat(value);\n\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n\n_s(ResourceListExample, \"64vKmWFmisM8yBjplNACi+CGAGY=\");\n\n_c = ResourceListExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResourceListExample\");","map":{"version":3,"sources":["/Users/martindegraf/Documents/proyectos/ca-export/components/order-list.component.js"],"names":["React","useCallback","useState","Avatar","Button","Card","Filters","ResourceItem","ResourceList","TextField","TextStyle","ResourceListExample","selectedItems","setSelectedItems","sortValue","setSortValue","taggedWith","setTaggedWith","queryValue","setQueryValue","handleTaggedWithChange","value","handleQueryValueChange","handleTaggedWithRemove","handleQueryValueRemove","handleClearAll","resourceName","singular","plural","items","id","url","name","location","latestOrderUrl","promotedBulkActions","content","onAction","console","log","bulkActions","filters","key","label","filter","shortcut","appliedFilters","isEmpty","disambiguateLabel","onRemove","filterControl","paddingLeft","renderItem","selected","item","media","shortcutActions","Array","isArray","length"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Avatar, Button, Card, Filters, ResourceItem, ResourceList, TextField, TextStyle} from '@shopify/polaris';\n\nexport default function ResourceListExample() {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [sortValue, setSortValue] = useState('DATE_MODIFIED_DESC');\n  const [taggedWith, setTaggedWith] = useState('VIP');\n  const [queryValue, setQueryValue] = useState(null);\n\n  const handleTaggedWithChange = useCallback(\n    (value) => setTaggedWith(value),\n    [],\n  );\n  const handleQueryValueChange = useCallback(\n    (value) => setQueryValue(value),\n    [],\n  );\n  const handleTaggedWithRemove = useCallback(() => setTaggedWith(null), []);\n  const handleQueryValueRemove = useCallback(() => setQueryValue(null), []);\n  const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n  }, [handleQueryValueRemove, handleTaggedWithRemove]);\n\n  const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n  };\n\n  const items = [\n    {\n      id: 341,\n      url: 'customers/341',\n      name: 'Mae Jemison',\n      location: 'Decatur, USA',\n      latestOrderUrl: 'orders/1456',\n    },\n    {\n      id: 256,\n      url: 'customers/256',\n      name: 'Ellen Ochoa',\n      location: 'Los Angeles, USA',\n      latestOrderUrl: 'orders/1457',\n    },\n  ];\n\n  const promotedBulkActions = [\n    {\n      content: 'Edit customers',\n      onAction: () => console.log('Todo: implement bulk edit'),\n    },\n  ];\n\n  const bulkActions = [\n    {\n      content: 'Add tags',\n      onAction: () => console.log('Todo: implement bulk add tags'),\n    },\n    {\n      content: 'Remove tags',\n      onAction: () => console.log('Todo: implement bulk remove tags'),\n    },\n    {\n      content: 'Delete customers',\n      onAction: () => console.log('Todo: implement bulk delete'),\n    },\n  ];\n\n  const filters = [\n    {\n      key: 'taggedWith',\n      label: 'Tagged with',\n      filter: (\n        <TextField\n          label=\"Tagged with\"\n          value={taggedWith}\n          onChange={handleTaggedWithChange}\n          labelHidden\n        />\n      ),\n      shortcut: true,\n    },\n  ];\n\n  const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n          key: 'taggedWith',\n          label: disambiguateLabel('taggedWith', taggedWith),\n          onRemove: handleTaggedWithRemove,\n        },\n      ]\n    : [];\n\n  const filterControl = (\n    <Filters\n      queryValue={queryValue}\n      filters={filters}\n      appliedFilters={appliedFilters}\n      onQueryChange={handleQueryValueChange}\n      onQueryClear={handleQueryValueRemove}\n      onClearAll={handleClearAll}\n    >\n      <div style={{paddingLeft: '8px'}}>\n        <Button onClick={() => console.log('New filter saved')}>Save</Button>\n      </div>\n    </Filters>\n  );\n\n  return (\n    <Card>\n      <ResourceList\n        resourceName={resourceName}\n        items={items}\n        renderItem={renderItem}\n        selectedItems={selectedItems}\n        onSelectionChange={setSelectedItems}\n        promotedBulkActions={promotedBulkActions}\n        bulkActions={bulkActions}\n        sortValue={sortValue}\n        sortOptions={[\n          {label: 'Newest update', value: 'DATE_MODIFIED_DESC'},\n          {label: 'Oldest update', value: 'DATE_MODIFIED_ASC'},\n        ]}\n        onSortChange={(selected) => {\n          setSortValue(selected);\n          console.log(`Sort option changed to ${selected}.`);\n        }}\n        filterControl={filterControl}\n      />\n    </Card>\n  );\n\n  function renderItem(item) {\n    const {id, url, name, location, latestOrderUrl} = item;\n    const media = <Avatar customer size=\"medium\" name={name} />;\n    const shortcutActions = latestOrderUrl\n      ? [{content: 'View latest order', url: latestOrderUrl}]\n      : null;\n    return (\n      <ResourceItem\n        id={id}\n        url={url}\n        media={media}\n        accessibilityLabel={`View details for ${name}`}\n        shortcutActions={shortcutActions}\n        persistActions\n      >\n        <h3>\n          <TextStyle variation=\"strong\">{name}</TextStyle>\n        </h3>\n        <div>{location}</div>\n      </ResourceItem>\n    );\n  }\n\n  function disambiguateLabel(key, value) {\n    switch (key) {\n      case 'taggedWith':\n        return `Tagged with ${value}`;\n      default:\n        return value;\n    }\n  }\n\n  function isEmpty(value) {\n    if (Array.isArray(value)) {\n      return value.length === 0;\n    } else {\n      return value === '' || value == null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}